// ---------------------------------------------------------
// This file was generated by parol.
// It is not intended for manual editing and changes will be
// lost after next build.
// ---------------------------------------------------------

use parol_runtime::id_tree::Tree;
use parol_runtime::lexer::{TokenStream, Tokenizer};
use parol_runtime::miette::Result;
use parol_runtime::once_cell::sync::Lazy;
#[allow(unused_imports)]
use parol_runtime::parser::{
    DFATransition, LLKParser, LookaheadDFA, ParseTreeType, ParseType, Production,
};
use std::cell::RefCell;
use std::path::Path;

use crate::skill_grammar::SkillGrammar;
use crate::skill_grammar_trait::SkillGrammarAuto;

use parol_runtime::lexer::tokenizer::{
    ERROR_TOKEN, NEW_LINE_TOKEN, UNMATCHABLE_TOKEN, WHITESPACE_TOKEN,
};

pub const TERMINALS: &[&str; 42] = &[
    /*  0 */ UNMATCHABLE_TOKEN,
    /*  1 */ UNMATCHABLE_TOKEN,
    /*  2 */ UNMATCHABLE_TOKEN,
    /*  3 */ UNMATCHABLE_TOKEN,
    /*  4 */ UNMATCHABLE_TOKEN,
    /*  5 */ r###"縦"###,
    /*  6 */ r###"列"###,
    /*  7 */ r###"端"###,
    /*  8 */ r###"両"###,
    /*  9 */ r###"左"###,
    /* 10 */ r###"右"###,
    /* 11 */ r###"目"###,
    /* 12 */ r###"火"###,
    /* 13 */ r###"水"###,
    /* 14 */ r###"木"###,
    /* 15 */ r###"光"###,
    /* 16 */ r###"闇"###,
    /* 17 */ r###"回復"###,
    /* 18 */ r###"お邪魔"###,
    /* 19 */ r###"爆弾"###,
    /* 20 */ r###"猛毒"###,
    /* 21 */ r###"毒"###,
    /* 22 */ r###"変化"###,
    /* 23 */ r###"ドロップ"###,
    /* 24 */ r###"全"###,
    /* 25 */ r###"5属性"###,
    /* 26 */ r###"ランダム"###,
    /* 27 */ r###"入れ替える"###,
    /* 28 */ r###"個"###,
    /* 29 */ r###"生成"###,
    /* 30 */ r###"以外"###,
    /* 31 */ r###"を"###,
    /* 32 */ r###"に"###,
    /* 33 */ r###"で"###,
    /* 34 */ r###"と"###,
    /* 35 */ r###"ずつ"###,
    /* 36 */ r###"から"###,
    /* 37 */ r###"\+"###,
    /* 38 */ r###"、"###,
    /* 39 */ r###"。"###,
    /* 40 */ r###"[1-9]([0-9])*"###,
    /* 41 */ ERROR_TOKEN,
];

pub const TERMINAL_NAMES: &[&str; 42] = &[
    /*  0 */ "EndOfInput",
    /*  1 */ "Newline",
    /*  2 */ "Whitespace",
    /*  3 */ "LineComment",
    /*  4 */ "BlockComment",
    /*  5 */ "WordVertical",
    /*  6 */ "WordCol",
    /*  7 */ "WordSide",
    /*  8 */ "WordLeftAndRight",
    /*  9 */ "WordLeft",
    /* 10 */ "WordRight",
    /* 11 */ "WordLook",
    /* 12 */ "Fire",
    /* 13 */ "Water",
    /* 14 */ "Wood",
    /* 15 */ "Lightning",
    /* 16 */ "Dark",
    /* 17 */ "Recovery",
    /* 18 */ "Disturb",
    /* 19 */ "Bomb",
    /* 20 */ "DeadlyPoison",
    /* 21 */ "Poison",
    /* 22 */ "WordChange",
    /* 23 */ "WordDrop",
    /* 24 */ "WordAll",
    /* 25 */ "WordFiveAttribute",
    /* 26 */ "WordRandom",
    /* 27 */ "WordReplace",
    /* 28 */ "WordCount",
    /* 29 */ "WordGen",
    /* 30 */ "WordOther",
    /* 31 */ "Wo",
    /* 32 */ "Ni",
    /* 33 */ "So",
    /* 34 */ "And",
    /* 35 */ "Each",
    /* 36 */ "From",
    /* 37 */ "Plus",
    /* 38 */ "Camma",
    /* 39 */ "Period",
    /* 40 */ "PosInt",
    /* 41 */ "Error",
];

/* SCANNER_0: "INITIAL" */
const SCANNER_0: (&[&str; 5], &[usize; 36]) = (
    &[
        /*  0 */ UNMATCHABLE_TOKEN,
        /*  1 */ NEW_LINE_TOKEN,
        /*  2 */ WHITESPACE_TOKEN,
        /*  3 */ UNMATCHABLE_TOKEN,
        /*  4 */ UNMATCHABLE_TOKEN,
    ],
    &[
        5,  /* WordVertical */
        6,  /* WordCol */
        7,  /* WordSide */
        8,  /* WordLeftAndRight */
        9,  /* WordLeft */
        10, /* WordRight */
        11, /* WordLook */
        12, /* Fire */
        13, /* Water */
        14, /* Wood */
        15, /* Lightning */
        16, /* Dark */
        17, /* Recovery */
        18, /* Disturb */
        19, /* Bomb */
        20, /* DeadlyPoison */
        21, /* Poison */
        22, /* WordChange */
        23, /* WordDrop */
        24, /* WordAll */
        25, /* WordFiveAttribute */
        26, /* WordRandom */
        27, /* WordReplace */
        28, /* WordCount */
        29, /* WordGen */
        30, /* WordOther */
        31, /* Wo */
        32, /* Ni */
        33, /* So */
        34, /* And */
        35, /* Each */
        36, /* From */
        37, /* Plus */
        38, /* Camma */
        39, /* Period */
        40, /* PosInt */
    ],
);

const MAX_K: usize = 3;

pub const NON_TERMINALS: &[&str; 76] = &[
    /*  0 */ "AllDrops",
    /*  1 */ "And",
    /*  2 */ "Bomb",
    /*  3 */ "Camma",
    /*  4 */ "ChangeAllOfBoradStmt",
    /*  5 */ "ChangeDropBlockOtherFirst",
    /*  6 */ "ChangeDropStmtIncGenRandomDrop",
    /*  7 */ "ChangeDropStmtIncGenRandomDropList",
    /*  8 */ "ChangeDropStmtIncGenRandomDropSuffix",
    /*  9 */ "ChangeDropStmtIncGenRandomDropSuffix0",
    /* 10 */ "Color",
    /* 11 */ "Dark",
    /* 12 */ "DeadlyPoison",
    /* 13 */ "Disturb",
    /* 14 */ "Drop",
    /* 15 */ "DropOpt",
    /* 16 */ "DropOpt0",
    /* 17 */ "DropRefreshStmt",
    /* 18 */ "Drops",
    /* 19 */ "DropsList",
    /* 20 */ "DropsList0",
    /* 21 */ "DropsSuffix",
    /* 22 */ "Each",
    /* 23 */ "Fire",
    /* 24 */ "FiveAttribute",
    /* 25 */ "FiveAttributeOpt",
    /* 26 */ "From",
    /* 27 */ "GSSPCenter",
    /* 28 */ "GSSPCenterBlock",
    /* 29 */ "GSSPCenterBlocks",
    /* 30 */ "GSSPCenterBlocksOpt",
    /* 31 */ "GSSPSide",
    /* 32 */ "GSSPSideWriteWidth",
    /* 33 */ "GSSPSideWriteWidthOpt",
    /* 34 */ "GSStartPosition",
    /* 35 */ "GenRandomDropStmt1",
    /* 36 */ "GenShapeBlock",
    /* 37 */ "GenShapeNumOfGen",
    /* 38 */ "GenShapeStmt",
    /* 39 */ "GenShapeStmtList",
    /* 40 */ "Lightning",
    /* 41 */ "Line",
    /* 42 */ "ManyDrop",
    /* 43 */ "Ni",
    /* 44 */ "NonColoredDrop",
    /* 45 */ "Period",
    /* 46 */ "Plus",
    /* 47 */ "Poison",
    /* 48 */ "PosInt",
    /* 49 */ "PositionLOrR",
    /* 50 */ "PositionLR",
    /* 51 */ "Quantity",
    /* 52 */ "QuantityOpt",
    /* 53 */ "RandomSuffix",
    /* 54 */ "Recovery",
    /* 55 */ "SkillLines",
    /* 56 */ "So",
    /* 57 */ "Water",
    /* 58 */ "Wo",
    /* 59 */ "Wood",
    /* 60 */ "WordAll",
    /* 61 */ "WordChange",
    /* 62 */ "WordCol",
    /* 63 */ "WordCount",
    /* 64 */ "WordDrop",
    /* 65 */ "WordFiveAttribute",
    /* 66 */ "WordGen",
    /* 67 */ "WordLeft",
    /* 68 */ "WordLeftAndRight",
    /* 69 */ "WordLook",
    /* 70 */ "WordOther",
    /* 71 */ "WordRandom",
    /* 72 */ "WordReplace",
    /* 73 */ "WordRight",
    /* 74 */ "WordSide",
    /* 75 */ "WordVertical",
];

pub const LOOKAHEAD_AUTOMATA: &[LookaheadDFA; 76] = &[
    /* 0 - "AllDrops" */
    LookaheadDFA {
        states: &[Some(56)],
        transitions: &[],
        k: 0,
    },
    /* 1 - "And" */
    LookaheadDFA {
        states: &[Some(102)],
        transitions: &[],
        k: 0,
    },
    /* 2 - "Bomb" */
    LookaheadDFA {
        states: &[Some(87)],
        transitions: &[],
        k: 0,
    },
    /* 3 - "Camma" */
    LookaheadDFA {
        states: &[Some(106)],
        transitions: &[],
        k: 0,
    },
    /* 4 - "ChangeAllOfBoradStmt" */
    LookaheadDFA {
        states: &[Some(13)],
        transitions: &[],
        k: 0,
    },
    /* 5 - "ChangeDropBlockOtherFirst" */
    LookaheadDFA {
        states: &[Some(15)],
        transitions: &[],
        k: 0,
    },
    /* 6 - "ChangeDropStmtIncGenRandomDrop" */
    LookaheadDFA {
        states: &[Some(6)],
        transitions: &[],
        k: 0,
    },
    /* 7 - "ChangeDropStmtIncGenRandomDropList" */
    LookaheadDFA {
        states: &[None, Some(11), Some(12)],
        transitions: &[DFATransition(0, 22, 2), DFATransition(0, 38, 1)],
        k: 1,
    },
    /* 8 - "ChangeDropStmtIncGenRandomDropSuffix" */
    LookaheadDFA {
        states: &[None, Some(9), Some(10)],
        transitions: &[
            DFATransition(0, 12, 1),
            DFATransition(0, 13, 1),
            DFATransition(0, 14, 1),
            DFATransition(0, 15, 1),
            DFATransition(0, 16, 1),
            DFATransition(0, 17, 1),
            DFATransition(0, 18, 1),
            DFATransition(0, 19, 1),
            DFATransition(0, 20, 1),
            DFATransition(0, 21, 1),
            DFATransition(0, 40, 2),
        ],
        k: 1,
    },
    /* 9 - "ChangeDropStmtIncGenRandomDropSuffix0" */
    LookaheadDFA {
        states: &[None, Some(7), Some(8)],
        transitions: &[DFATransition(0, 30, 2), DFATransition(0, 31, 1)],
        k: 1,
    },
    /* 10 - "Color" */
    LookaheadDFA {
        states: &[None, Some(74), Some(75), Some(76), Some(77), Some(78)],
        transitions: &[
            DFATransition(0, 12, 1),
            DFATransition(0, 13, 2),
            DFATransition(0, 14, 3),
            DFATransition(0, 15, 4),
            DFATransition(0, 16, 5),
        ],
        k: 1,
    },
    /* 11 - "Dark" */
    LookaheadDFA {
        states: &[Some(84)],
        transitions: &[],
        k: 0,
    },
    /* 12 - "DeadlyPoison" */
    LookaheadDFA {
        states: &[Some(88)],
        transitions: &[],
        k: 0,
    },
    /* 13 - "Disturb" */
    LookaheadDFA {
        states: &[Some(86)],
        transitions: &[],
        k: 0,
    },
    /* 14 - "Drop" */
    LookaheadDFA {
        states: &[None, Some(63), Some(64)],
        transitions: &[
            DFATransition(0, 12, 1),
            DFATransition(0, 13, 1),
            DFATransition(0, 14, 1),
            DFATransition(0, 15, 1),
            DFATransition(0, 16, 1),
            DFATransition(0, 17, 2),
            DFATransition(0, 18, 2),
            DFATransition(0, 19, 2),
            DFATransition(0, 20, 2),
            DFATransition(0, 21, 2),
        ],
        k: 1,
    },
    /* 15 - "DropOpt" */
    LookaheadDFA {
        states: &[None, Some(67), Some(68)],
        transitions: &[
            DFATransition(0, 23, 1),
            DFATransition(0, 30, 2),
            DFATransition(0, 31, 2),
            DFATransition(0, 32, 2),
            DFATransition(0, 34, 2),
            DFATransition(0, 37, 2),
            DFATransition(0, 38, 2),
        ],
        k: 1,
    },
    /* 16 - "DropOpt0" */
    LookaheadDFA {
        states: &[None, Some(65), Some(66)],
        transitions: &[
            DFATransition(0, 23, 1),
            DFATransition(0, 30, 2),
            DFATransition(0, 31, 2),
            DFATransition(0, 32, 2),
            DFATransition(0, 34, 2),
            DFATransition(0, 37, 2),
            DFATransition(0, 38, 2),
        ],
        k: 1,
    },
    /* 17 - "DropRefreshStmt" */
    LookaheadDFA {
        states: &[Some(14)],
        transitions: &[],
        k: 0,
    },
    /* 18 - "Drops" */
    LookaheadDFA {
        states: &[None, Some(46), Some(48)],
        transitions: &[
            DFATransition(0, 12, 1),
            DFATransition(0, 13, 1),
            DFATransition(0, 14, 1),
            DFATransition(0, 15, 1),
            DFATransition(0, 16, 1),
            DFATransition(0, 17, 1),
            DFATransition(0, 18, 1),
            DFATransition(0, 19, 1),
            DFATransition(0, 20, 1),
            DFATransition(0, 21, 1),
            DFATransition(0, 25, 2),
        ],
        k: 1,
    },
    /* 19 - "DropsList" */
    LookaheadDFA {
        states: &[None, Some(50), Some(51)],
        transitions: &[
            DFATransition(0, 30, 2),
            DFATransition(0, 31, 2),
            DFATransition(0, 32, 2),
            DFATransition(0, 37, 1),
            DFATransition(0, 38, 1),
        ],
        k: 1,
    },
    /* 20 - "DropsList0" */
    LookaheadDFA {
        states: &[None, Some(52), Some(53)],
        transitions: &[
            DFATransition(0, 30, 2),
            DFATransition(0, 31, 2),
            DFATransition(0, 32, 2),
            DFATransition(0, 37, 1),
        ],
        k: 1,
    },
    /* 21 - "DropsSuffix" */
    LookaheadDFA {
        states: &[None, Some(47), Some(49)],
        transitions: &[
            DFATransition(0, 30, 1),
            DFATransition(0, 31, 1),
            DFATransition(0, 32, 1),
            DFATransition(0, 34, 2),
            DFATransition(0, 37, 1),
            DFATransition(0, 38, 1),
        ],
        k: 1,
    },
    /* 22 - "Each" */
    LookaheadDFA {
        states: &[Some(103)],
        transitions: &[],
        k: 0,
    },
    /* 23 - "Fire" */
    LookaheadDFA {
        states: &[Some(80)],
        transitions: &[],
        k: 0,
    },
    /* 24 - "FiveAttribute" */
    LookaheadDFA {
        states: &[Some(57)],
        transitions: &[],
        k: 0,
    },
    /* 25 - "FiveAttributeOpt" */
    LookaheadDFA {
        states: &[None, Some(58), Some(59)],
        transitions: &[
            DFATransition(0, 23, 1),
            DFATransition(0, 30, 2),
            DFATransition(0, 31, 2),
            DFATransition(0, 32, 2),
            DFATransition(0, 37, 2),
        ],
        k: 1,
    },
    /* 26 - "From" */
    LookaheadDFA {
        states: &[Some(104)],
        transitions: &[],
        k: 0,
    },
    /* 27 - "GSSPCenter" */
    LookaheadDFA {
        states: &[Some(24)],
        transitions: &[],
        k: 0,
    },
    /* 28 - "GSSPCenterBlock" */
    LookaheadDFA {
        states: &[Some(28)],
        transitions: &[],
        k: 0,
    },
    /* 29 - "GSSPCenterBlocks" */
    LookaheadDFA {
        states: &[Some(25)],
        transitions: &[],
        k: 0,
    },
    /* 30 - "GSSPCenterBlocksOpt" */
    LookaheadDFA {
        states: &[None, Some(26), Some(27)],
        transitions: &[DFATransition(0, 5, 2), DFATransition(0, 34, 1)],
        k: 1,
    },
    /* 31 - "GSSPSide" */
    LookaheadDFA {
        states: &[Some(23)],
        transitions: &[],
        k: 0,
    },
    /* 32 - "GSSPSideWriteWidth" */
    LookaheadDFA {
        states: &[None, Some(32), Some(33)],
        transitions: &[DFATransition(0, 5, 2), DFATransition(0, 7, 1)],
        k: 1,
    },
    /* 33 - "GSSPSideWriteWidthOpt" */
    LookaheadDFA {
        states: &[None, Some(34), Some(35)],
        transitions: &[DFATransition(0, 5, 1), DFATransition(0, 40, 2)],
        k: 1,
    },
    /* 34 - "GSStartPosition" */
    LookaheadDFA {
        states: &[None, None, Some(21), None, None, Some(22)],
        transitions: &[
            DFATransition(0, 8, 1),
            DFATransition(0, 9, 3),
            DFATransition(0, 10, 4),
            DFATransition(1, 5, 2),
            DFATransition(1, 7, 2),
            DFATransition(3, 5, 2),
            DFATransition(3, 7, 2),
            DFATransition(3, 36, 5),
            DFATransition(4, 5, 2),
            DFATransition(4, 7, 2),
            DFATransition(4, 36, 5),
        ],
        k: 2,
    },
    /* 35 - "GenRandomDropStmt1" */
    LookaheadDFA {
        states: &[Some(16)],
        transitions: &[],
        k: 0,
    },
    /* 36 - "GenShapeBlock" */
    LookaheadDFA {
        states: &[Some(20)],
        transitions: &[],
        k: 0,
    },
    /* 37 - "GenShapeNumOfGen" */
    LookaheadDFA {
        states: &[Some(38)],
        transitions: &[],
        k: 0,
    },
    /* 38 - "GenShapeStmt" */
    LookaheadDFA {
        states: &[Some(17)],
        transitions: &[],
        k: 0,
    },
    /* 39 - "GenShapeStmtList" */
    LookaheadDFA {
        states: &[None, Some(18), Some(19)],
        transitions: &[DFATransition(0, 22, 2), DFATransition(0, 38, 1)],
        k: 1,
    },
    /* 40 - "Lightning" */
    LookaheadDFA {
        states: &[Some(83)],
        transitions: &[],
        k: 0,
    },
    /* 41 - "Line" */
    LookaheadDFA {
        states: &[
            None,
            None,
            None,
            Some(1),
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            Some(2),
            None,
            None,
            Some(3),
            None,
            None,
            None,
            None,
            None,
            Some(4),
            None,
            None,
            None,
            None,
            None,
            None,
            Some(5),
        ],
        transitions: &[
            DFATransition(0, 8, 83),
            DFATransition(0, 9, 84),
            DFATransition(0, 10, 85),
            DFATransition(0, 12, 1),
            DFATransition(0, 13, 9),
            DFATransition(0, 14, 16),
            DFATransition(0, 15, 23),
            DFATransition(0, 16, 30),
            DFATransition(0, 17, 37),
            DFATransition(0, 18, 44),
            DFATransition(0, 19, 51),
            DFATransition(0, 20, 58),
            DFATransition(0, 21, 65),
            DFATransition(0, 24, 77),
            DFATransition(0, 25, 72),
            DFATransition(0, 26, 80),
            DFATransition(1, 23, 2),
            DFATransition(1, 30, 4),
            DFATransition(1, 31, 5),
            DFATransition(1, 34, 6),
            DFATransition(1, 37, 7),
            DFATransition(1, 38, 8),
            DFATransition(2, 30, 3),
            DFATransition(2, 31, 3),
            DFATransition(2, 34, 3),
            DFATransition(2, 37, 3),
            DFATransition(2, 38, 3),
            DFATransition(4, 36, 3),
            DFATransition(5, 12, 3),
            DFATransition(5, 13, 3),
            DFATransition(5, 14, 3),
            DFATransition(5, 15, 3),
            DFATransition(5, 16, 3),
            DFATransition(5, 17, 3),
            DFATransition(5, 18, 3),
            DFATransition(5, 19, 3),
            DFATransition(5, 20, 3),
            DFATransition(5, 21, 3),
            DFATransition(5, 40, 3),
            DFATransition(6, 12, 3),
            DFATransition(6, 13, 3),
            DFATransition(6, 14, 3),
            DFATransition(6, 15, 3),
            DFATransition(6, 16, 3),
            DFATransition(6, 17, 3),
            DFATransition(6, 18, 3),
            DFATransition(6, 19, 3),
            DFATransition(6, 20, 3),
            DFATransition(6, 21, 3),
            DFATransition(7, 12, 3),
            DFATransition(7, 13, 3),
            DFATransition(7, 14, 3),
            DFATransition(7, 15, 3),
            DFATransition(7, 16, 3),
            DFATransition(7, 17, 3),
            DFATransition(7, 18, 3),
            DFATransition(7, 19, 3),
            DFATransition(7, 20, 3),
            DFATransition(7, 21, 3),
            DFATransition(8, 12, 3),
            DFATransition(8, 13, 3),
            DFATransition(8, 14, 3),
            DFATransition(8, 15, 3),
            DFATransition(8, 16, 3),
            DFATransition(8, 17, 3),
            DFATransition(8, 18, 3),
            DFATransition(8, 19, 3),
            DFATransition(8, 20, 3),
            DFATransition(8, 21, 3),
            DFATransition(9, 23, 10),
            DFATransition(9, 30, 11),
            DFATransition(9, 31, 12),
            DFATransition(9, 34, 13),
            DFATransition(9, 37, 14),
            DFATransition(9, 38, 15),
            DFATransition(10, 30, 3),
            DFATransition(10, 31, 3),
            DFATransition(10, 34, 3),
            DFATransition(10, 37, 3),
            DFATransition(10, 38, 3),
            DFATransition(11, 36, 3),
            DFATransition(12, 12, 3),
            DFATransition(12, 13, 3),
            DFATransition(12, 14, 3),
            DFATransition(12, 15, 3),
            DFATransition(12, 16, 3),
            DFATransition(12, 17, 3),
            DFATransition(12, 18, 3),
            DFATransition(12, 19, 3),
            DFATransition(12, 20, 3),
            DFATransition(12, 21, 3),
            DFATransition(12, 40, 3),
            DFATransition(13, 12, 3),
            DFATransition(13, 13, 3),
            DFATransition(13, 14, 3),
            DFATransition(13, 15, 3),
            DFATransition(13, 16, 3),
            DFATransition(13, 17, 3),
            DFATransition(13, 18, 3),
            DFATransition(13, 19, 3),
            DFATransition(13, 20, 3),
            DFATransition(13, 21, 3),
            DFATransition(14, 12, 3),
            DFATransition(14, 13, 3),
            DFATransition(14, 14, 3),
            DFATransition(14, 15, 3),
            DFATransition(14, 16, 3),
            DFATransition(14, 17, 3),
            DFATransition(14, 18, 3),
            DFATransition(14, 19, 3),
            DFATransition(14, 20, 3),
            DFATransition(14, 21, 3),
            DFATransition(15, 12, 3),
            DFATransition(15, 13, 3),
            DFATransition(15, 14, 3),
            DFATransition(15, 15, 3),
            DFATransition(15, 16, 3),
            DFATransition(15, 17, 3),
            DFATransition(15, 18, 3),
            DFATransition(15, 19, 3),
            DFATransition(15, 20, 3),
            DFATransition(15, 21, 3),
            DFATransition(16, 23, 17),
            DFATransition(16, 30, 18),
            DFATransition(16, 31, 19),
            DFATransition(16, 34, 20),
            DFATransition(16, 37, 21),
            DFATransition(16, 38, 22),
            DFATransition(17, 30, 3),
            DFATransition(17, 31, 3),
            DFATransition(17, 34, 3),
            DFATransition(17, 37, 3),
            DFATransition(17, 38, 3),
            DFATransition(18, 36, 3),
            DFATransition(19, 12, 3),
            DFATransition(19, 13, 3),
            DFATransition(19, 14, 3),
            DFATransition(19, 15, 3),
            DFATransition(19, 16, 3),
            DFATransition(19, 17, 3),
            DFATransition(19, 18, 3),
            DFATransition(19, 19, 3),
            DFATransition(19, 20, 3),
            DFATransition(19, 21, 3),
            DFATransition(19, 40, 3),
            DFATransition(20, 12, 3),
            DFATransition(20, 13, 3),
            DFATransition(20, 14, 3),
            DFATransition(20, 15, 3),
            DFATransition(20, 16, 3),
            DFATransition(20, 17, 3),
            DFATransition(20, 18, 3),
            DFATransition(20, 19, 3),
            DFATransition(20, 20, 3),
            DFATransition(20, 21, 3),
            DFATransition(21, 12, 3),
            DFATransition(21, 13, 3),
            DFATransition(21, 14, 3),
            DFATransition(21, 15, 3),
            DFATransition(21, 16, 3),
            DFATransition(21, 17, 3),
            DFATransition(21, 18, 3),
            DFATransition(21, 19, 3),
            DFATransition(21, 20, 3),
            DFATransition(21, 21, 3),
            DFATransition(22, 12, 3),
            DFATransition(22, 13, 3),
            DFATransition(22, 14, 3),
            DFATransition(22, 15, 3),
            DFATransition(22, 16, 3),
            DFATransition(22, 17, 3),
            DFATransition(22, 18, 3),
            DFATransition(22, 19, 3),
            DFATransition(22, 20, 3),
            DFATransition(22, 21, 3),
            DFATransition(23, 23, 24),
            DFATransition(23, 30, 25),
            DFATransition(23, 31, 26),
            DFATransition(23, 34, 27),
            DFATransition(23, 37, 28),
            DFATransition(23, 38, 29),
            DFATransition(24, 30, 3),
            DFATransition(24, 31, 3),
            DFATransition(24, 34, 3),
            DFATransition(24, 37, 3),
            DFATransition(24, 38, 3),
            DFATransition(25, 36, 3),
            DFATransition(26, 12, 3),
            DFATransition(26, 13, 3),
            DFATransition(26, 14, 3),
            DFATransition(26, 15, 3),
            DFATransition(26, 16, 3),
            DFATransition(26, 17, 3),
            DFATransition(26, 18, 3),
            DFATransition(26, 19, 3),
            DFATransition(26, 20, 3),
            DFATransition(26, 21, 3),
            DFATransition(26, 40, 3),
            DFATransition(27, 12, 3),
            DFATransition(27, 13, 3),
            DFATransition(27, 14, 3),
            DFATransition(27, 15, 3),
            DFATransition(27, 16, 3),
            DFATransition(27, 17, 3),
            DFATransition(27, 18, 3),
            DFATransition(27, 19, 3),
            DFATransition(27, 20, 3),
            DFATransition(27, 21, 3),
            DFATransition(28, 12, 3),
            DFATransition(28, 13, 3),
            DFATransition(28, 14, 3),
            DFATransition(28, 15, 3),
            DFATransition(28, 16, 3),
            DFATransition(28, 17, 3),
            DFATransition(28, 18, 3),
            DFATransition(28, 19, 3),
            DFATransition(28, 20, 3),
            DFATransition(28, 21, 3),
            DFATransition(29, 12, 3),
            DFATransition(29, 13, 3),
            DFATransition(29, 14, 3),
            DFATransition(29, 15, 3),
            DFATransition(29, 16, 3),
            DFATransition(29, 17, 3),
            DFATransition(29, 18, 3),
            DFATransition(29, 19, 3),
            DFATransition(29, 20, 3),
            DFATransition(29, 21, 3),
            DFATransition(30, 23, 31),
            DFATransition(30, 30, 32),
            DFATransition(30, 31, 33),
            DFATransition(30, 34, 34),
            DFATransition(30, 37, 35),
            DFATransition(30, 38, 36),
            DFATransition(31, 30, 3),
            DFATransition(31, 31, 3),
            DFATransition(31, 34, 3),
            DFATransition(31, 37, 3),
            DFATransition(31, 38, 3),
            DFATransition(32, 36, 3),
            DFATransition(33, 12, 3),
            DFATransition(33, 13, 3),
            DFATransition(33, 14, 3),
            DFATransition(33, 15, 3),
            DFATransition(33, 16, 3),
            DFATransition(33, 17, 3),
            DFATransition(33, 18, 3),
            DFATransition(33, 19, 3),
            DFATransition(33, 20, 3),
            DFATransition(33, 21, 3),
            DFATransition(33, 40, 3),
            DFATransition(34, 12, 3),
            DFATransition(34, 13, 3),
            DFATransition(34, 14, 3),
            DFATransition(34, 15, 3),
            DFATransition(34, 16, 3),
            DFATransition(34, 17, 3),
            DFATransition(34, 18, 3),
            DFATransition(34, 19, 3),
            DFATransition(34, 20, 3),
            DFATransition(34, 21, 3),
            DFATransition(35, 12, 3),
            DFATransition(35, 13, 3),
            DFATransition(35, 14, 3),
            DFATransition(35, 15, 3),
            DFATransition(35, 16, 3),
            DFATransition(35, 17, 3),
            DFATransition(35, 18, 3),
            DFATransition(35, 19, 3),
            DFATransition(35, 20, 3),
            DFATransition(35, 21, 3),
            DFATransition(36, 12, 3),
            DFATransition(36, 13, 3),
            DFATransition(36, 14, 3),
            DFATransition(36, 15, 3),
            DFATransition(36, 16, 3),
            DFATransition(36, 17, 3),
            DFATransition(36, 18, 3),
            DFATransition(36, 19, 3),
            DFATransition(36, 20, 3),
            DFATransition(36, 21, 3),
            DFATransition(37, 23, 38),
            DFATransition(37, 30, 39),
            DFATransition(37, 31, 40),
            DFATransition(37, 34, 41),
            DFATransition(37, 37, 42),
            DFATransition(37, 38, 43),
            DFATransition(38, 30, 3),
            DFATransition(38, 31, 3),
            DFATransition(38, 34, 3),
            DFATransition(38, 37, 3),
            DFATransition(38, 38, 3),
            DFATransition(39, 36, 3),
            DFATransition(40, 12, 3),
            DFATransition(40, 13, 3),
            DFATransition(40, 14, 3),
            DFATransition(40, 15, 3),
            DFATransition(40, 16, 3),
            DFATransition(40, 17, 3),
            DFATransition(40, 18, 3),
            DFATransition(40, 19, 3),
            DFATransition(40, 20, 3),
            DFATransition(40, 21, 3),
            DFATransition(40, 40, 3),
            DFATransition(41, 12, 3),
            DFATransition(41, 13, 3),
            DFATransition(41, 14, 3),
            DFATransition(41, 15, 3),
            DFATransition(41, 16, 3),
            DFATransition(41, 17, 3),
            DFATransition(41, 18, 3),
            DFATransition(41, 19, 3),
            DFATransition(41, 20, 3),
            DFATransition(41, 21, 3),
            DFATransition(42, 12, 3),
            DFATransition(42, 13, 3),
            DFATransition(42, 14, 3),
            DFATransition(42, 15, 3),
            DFATransition(42, 16, 3),
            DFATransition(42, 17, 3),
            DFATransition(42, 18, 3),
            DFATransition(42, 19, 3),
            DFATransition(42, 20, 3),
            DFATransition(42, 21, 3),
            DFATransition(43, 12, 3),
            DFATransition(43, 13, 3),
            DFATransition(43, 14, 3),
            DFATransition(43, 15, 3),
            DFATransition(43, 16, 3),
            DFATransition(43, 17, 3),
            DFATransition(43, 18, 3),
            DFATransition(43, 19, 3),
            DFATransition(43, 20, 3),
            DFATransition(43, 21, 3),
            DFATransition(44, 23, 45),
            DFATransition(44, 30, 46),
            DFATransition(44, 31, 47),
            DFATransition(44, 34, 48),
            DFATransition(44, 37, 49),
            DFATransition(44, 38, 50),
            DFATransition(45, 30, 3),
            DFATransition(45, 31, 3),
            DFATransition(45, 34, 3),
            DFATransition(45, 37, 3),
            DFATransition(45, 38, 3),
            DFATransition(46, 36, 3),
            DFATransition(47, 12, 3),
            DFATransition(47, 13, 3),
            DFATransition(47, 14, 3),
            DFATransition(47, 15, 3),
            DFATransition(47, 16, 3),
            DFATransition(47, 17, 3),
            DFATransition(47, 18, 3),
            DFATransition(47, 19, 3),
            DFATransition(47, 20, 3),
            DFATransition(47, 21, 3),
            DFATransition(47, 40, 3),
            DFATransition(48, 12, 3),
            DFATransition(48, 13, 3),
            DFATransition(48, 14, 3),
            DFATransition(48, 15, 3),
            DFATransition(48, 16, 3),
            DFATransition(48, 17, 3),
            DFATransition(48, 18, 3),
            DFATransition(48, 19, 3),
            DFATransition(48, 20, 3),
            DFATransition(48, 21, 3),
            DFATransition(49, 12, 3),
            DFATransition(49, 13, 3),
            DFATransition(49, 14, 3),
            DFATransition(49, 15, 3),
            DFATransition(49, 16, 3),
            DFATransition(49, 17, 3),
            DFATransition(49, 18, 3),
            DFATransition(49, 19, 3),
            DFATransition(49, 20, 3),
            DFATransition(49, 21, 3),
            DFATransition(50, 12, 3),
            DFATransition(50, 13, 3),
            DFATransition(50, 14, 3),
            DFATransition(50, 15, 3),
            DFATransition(50, 16, 3),
            DFATransition(50, 17, 3),
            DFATransition(50, 18, 3),
            DFATransition(50, 19, 3),
            DFATransition(50, 20, 3),
            DFATransition(50, 21, 3),
            DFATransition(51, 23, 52),
            DFATransition(51, 30, 53),
            DFATransition(51, 31, 54),
            DFATransition(51, 34, 55),
            DFATransition(51, 37, 56),
            DFATransition(51, 38, 57),
            DFATransition(52, 30, 3),
            DFATransition(52, 31, 3),
            DFATransition(52, 34, 3),
            DFATransition(52, 37, 3),
            DFATransition(52, 38, 3),
            DFATransition(53, 36, 3),
            DFATransition(54, 12, 3),
            DFATransition(54, 13, 3),
            DFATransition(54, 14, 3),
            DFATransition(54, 15, 3),
            DFATransition(54, 16, 3),
            DFATransition(54, 17, 3),
            DFATransition(54, 18, 3),
            DFATransition(54, 19, 3),
            DFATransition(54, 20, 3),
            DFATransition(54, 21, 3),
            DFATransition(54, 40, 3),
            DFATransition(55, 12, 3),
            DFATransition(55, 13, 3),
            DFATransition(55, 14, 3),
            DFATransition(55, 15, 3),
            DFATransition(55, 16, 3),
            DFATransition(55, 17, 3),
            DFATransition(55, 18, 3),
            DFATransition(55, 19, 3),
            DFATransition(55, 20, 3),
            DFATransition(55, 21, 3),
            DFATransition(56, 12, 3),
            DFATransition(56, 13, 3),
            DFATransition(56, 14, 3),
            DFATransition(56, 15, 3),
            DFATransition(56, 16, 3),
            DFATransition(56, 17, 3),
            DFATransition(56, 18, 3),
            DFATransition(56, 19, 3),
            DFATransition(56, 20, 3),
            DFATransition(56, 21, 3),
            DFATransition(57, 12, 3),
            DFATransition(57, 13, 3),
            DFATransition(57, 14, 3),
            DFATransition(57, 15, 3),
            DFATransition(57, 16, 3),
            DFATransition(57, 17, 3),
            DFATransition(57, 18, 3),
            DFATransition(57, 19, 3),
            DFATransition(57, 20, 3),
            DFATransition(57, 21, 3),
            DFATransition(58, 23, 59),
            DFATransition(58, 30, 60),
            DFATransition(58, 31, 61),
            DFATransition(58, 34, 62),
            DFATransition(58, 37, 63),
            DFATransition(58, 38, 64),
            DFATransition(59, 30, 3),
            DFATransition(59, 31, 3),
            DFATransition(59, 34, 3),
            DFATransition(59, 37, 3),
            DFATransition(59, 38, 3),
            DFATransition(60, 36, 3),
            DFATransition(61, 12, 3),
            DFATransition(61, 13, 3),
            DFATransition(61, 14, 3),
            DFATransition(61, 15, 3),
            DFATransition(61, 16, 3),
            DFATransition(61, 17, 3),
            DFATransition(61, 18, 3),
            DFATransition(61, 19, 3),
            DFATransition(61, 20, 3),
            DFATransition(61, 21, 3),
            DFATransition(61, 40, 3),
            DFATransition(62, 12, 3),
            DFATransition(62, 13, 3),
            DFATransition(62, 14, 3),
            DFATransition(62, 15, 3),
            DFATransition(62, 16, 3),
            DFATransition(62, 17, 3),
            DFATransition(62, 18, 3),
            DFATransition(62, 19, 3),
            DFATransition(62, 20, 3),
            DFATransition(62, 21, 3),
            DFATransition(63, 12, 3),
            DFATransition(63, 13, 3),
            DFATransition(63, 14, 3),
            DFATransition(63, 15, 3),
            DFATransition(63, 16, 3),
            DFATransition(63, 17, 3),
            DFATransition(63, 18, 3),
            DFATransition(63, 19, 3),
            DFATransition(63, 20, 3),
            DFATransition(63, 21, 3),
            DFATransition(64, 12, 3),
            DFATransition(64, 13, 3),
            DFATransition(64, 14, 3),
            DFATransition(64, 15, 3),
            DFATransition(64, 16, 3),
            DFATransition(64, 17, 3),
            DFATransition(64, 18, 3),
            DFATransition(64, 19, 3),
            DFATransition(64, 20, 3),
            DFATransition(64, 21, 3),
            DFATransition(65, 23, 66),
            DFATransition(65, 30, 67),
            DFATransition(65, 31, 68),
            DFATransition(65, 34, 69),
            DFATransition(65, 37, 70),
            DFATransition(65, 38, 71),
            DFATransition(66, 30, 3),
            DFATransition(66, 31, 3),
            DFATransition(66, 34, 3),
            DFATransition(66, 37, 3),
            DFATransition(66, 38, 3),
            DFATransition(67, 36, 3),
            DFATransition(68, 12, 3),
            DFATransition(68, 13, 3),
            DFATransition(68, 14, 3),
            DFATransition(68, 15, 3),
            DFATransition(68, 16, 3),
            DFATransition(68, 17, 3),
            DFATransition(68, 18, 3),
            DFATransition(68, 19, 3),
            DFATransition(68, 20, 3),
            DFATransition(68, 21, 3),
            DFATransition(68, 40, 3),
            DFATransition(69, 12, 3),
            DFATransition(69, 13, 3),
            DFATransition(69, 14, 3),
            DFATransition(69, 15, 3),
            DFATransition(69, 16, 3),
            DFATransition(69, 17, 3),
            DFATransition(69, 18, 3),
            DFATransition(69, 19, 3),
            DFATransition(69, 20, 3),
            DFATransition(69, 21, 3),
            DFATransition(70, 12, 3),
            DFATransition(70, 13, 3),
            DFATransition(70, 14, 3),
            DFATransition(70, 15, 3),
            DFATransition(70, 16, 3),
            DFATransition(70, 17, 3),
            DFATransition(70, 18, 3),
            DFATransition(70, 19, 3),
            DFATransition(70, 20, 3),
            DFATransition(70, 21, 3),
            DFATransition(71, 12, 3),
            DFATransition(71, 13, 3),
            DFATransition(71, 14, 3),
            DFATransition(71, 15, 3),
            DFATransition(71, 16, 3),
            DFATransition(71, 17, 3),
            DFATransition(71, 18, 3),
            DFATransition(71, 19, 3),
            DFATransition(71, 20, 3),
            DFATransition(71, 21, 3),
            DFATransition(72, 23, 73),
            DFATransition(72, 30, 74),
            DFATransition(72, 31, 75),
            DFATransition(72, 37, 76),
            DFATransition(73, 30, 3),
            DFATransition(73, 31, 3),
            DFATransition(73, 37, 3),
            DFATransition(74, 36, 3),
            DFATransition(75, 12, 3),
            DFATransition(75, 13, 3),
            DFATransition(75, 14, 3),
            DFATransition(75, 15, 3),
            DFATransition(75, 16, 3),
            DFATransition(75, 17, 3),
            DFATransition(75, 18, 3),
            DFATransition(75, 19, 3),
            DFATransition(75, 20, 3),
            DFATransition(75, 21, 3),
            DFATransition(75, 40, 3),
            DFATransition(76, 12, 3),
            DFATransition(76, 13, 3),
            DFATransition(76, 14, 3),
            DFATransition(76, 15, 3),
            DFATransition(76, 16, 3),
            DFATransition(76, 17, 3),
            DFATransition(76, 18, 3),
            DFATransition(76, 19, 3),
            DFATransition(76, 20, 3),
            DFATransition(76, 21, 3),
            DFATransition(77, 23, 78),
            DFATransition(78, 31, 79),
            DFATransition(80, 33, 81),
            DFATransition(81, 12, 82),
            DFATransition(81, 13, 82),
            DFATransition(81, 14, 82),
            DFATransition(81, 15, 82),
            DFATransition(81, 16, 82),
            DFATransition(81, 17, 82),
            DFATransition(81, 18, 82),
            DFATransition(81, 19, 82),
            DFATransition(81, 20, 82),
            DFATransition(81, 21, 82),
            DFATransition(81, 23, 95),
            DFATransition(81, 25, 82),
            DFATransition(83, 5, 86),
            DFATransition(83, 7, 87),
            DFATransition(84, 5, 89),
            DFATransition(84, 7, 90),
            DFATransition(84, 36, 91),
            DFATransition(85, 5, 92),
            DFATransition(85, 7, 93),
            DFATransition(85, 36, 94),
            DFATransition(86, 40, 88),
            DFATransition(87, 5, 88),
            DFATransition(87, 40, 88),
            DFATransition(89, 40, 88),
            DFATransition(90, 5, 88),
            DFATransition(90, 40, 88),
            DFATransition(91, 40, 88),
            DFATransition(92, 40, 88),
            DFATransition(93, 5, 88),
            DFATransition(93, 40, 88),
            DFATransition(94, 40, 88),
        ],
        k: 3,
    },
    /* 42 - "ManyDrop" */
    LookaheadDFA {
        states: &[None, Some(54), Some(55)],
        transitions: &[DFATransition(0, 37, 2), DFATransition(0, 38, 1)],
        k: 1,
    },
    /* 43 - "Ni" */
    LookaheadDFA {
        states: &[Some(100)],
        transitions: &[],
        k: 0,
    },
    /* 44 - "NonColoredDrop" */
    LookaheadDFA {
        states: &[None, Some(69), Some(70), Some(71), Some(72), Some(73)],
        transitions: &[
            DFATransition(0, 17, 1),
            DFATransition(0, 18, 2),
            DFATransition(0, 19, 3),
            DFATransition(0, 20, 5),
            DFATransition(0, 21, 4),
        ],
        k: 1,
    },
    /* 45 - "Period" */
    LookaheadDFA {
        states: &[Some(107)],
        transitions: &[],
        k: 0,
    },
    /* 46 - "Plus" */
    LookaheadDFA {
        states: &[Some(105)],
        transitions: &[],
        k: 0,
    },
    /* 47 - "Poison" */
    LookaheadDFA {
        states: &[Some(89)],
        transitions: &[],
        k: 0,
    },
    /* 48 - "PosInt" */
    LookaheadDFA {
        states: &[Some(108)],
        transitions: &[],
        k: 0,
    },
    /* 49 - "PositionLOrR" */
    LookaheadDFA {
        states: &[None, Some(36), Some(37)],
        transitions: &[DFATransition(0, 9, 1), DFATransition(0, 10, 2)],
        k: 1,
    },
    /* 50 - "PositionLR" */
    LookaheadDFA {
        states: &[None, Some(29), Some(30), Some(31)],
        transitions: &[
            DFATransition(0, 8, 3),
            DFATransition(0, 9, 1),
            DFATransition(0, 10, 2),
        ],
        k: 1,
    },
    /* 51 - "Quantity" */
    LookaheadDFA {
        states: &[Some(60)],
        transitions: &[],
        k: 0,
    },
    /* 52 - "QuantityOpt" */
    LookaheadDFA {
        states: &[None, Some(61), Some(62)],
        transitions: &[DFATransition(0, 29, 2), DFATransition(0, 35, 1)],
        k: 1,
    },
    /* 53 - "RandomSuffix" */
    LookaheadDFA {
        states: &[Some(79)],
        transitions: &[],
        k: 0,
    },
    /* 54 - "Recovery" */
    LookaheadDFA {
        states: &[Some(85)],
        transitions: &[],
        k: 0,
    },
    /* 55 - "SkillLines" */
    LookaheadDFA {
        states: &[Some(0)],
        transitions: &[],
        k: 0,
    },
    /* 56 - "So" */
    LookaheadDFA {
        states: &[Some(101)],
        transitions: &[],
        k: 0,
    },
    /* 57 - "Water" */
    LookaheadDFA {
        states: &[Some(81)],
        transitions: &[],
        k: 0,
    },
    /* 58 - "Wo" */
    LookaheadDFA {
        states: &[Some(99)],
        transitions: &[],
        k: 0,
    },
    /* 59 - "Wood" */
    LookaheadDFA {
        states: &[Some(82)],
        transitions: &[],
        k: 0,
    },
    /* 60 - "WordAll" */
    LookaheadDFA {
        states: &[Some(92)],
        transitions: &[],
        k: 0,
    },
    /* 61 - "WordChange" */
    LookaheadDFA {
        states: &[Some(90)],
        transitions: &[],
        k: 0,
    },
    /* 62 - "WordCol" */
    LookaheadDFA {
        states: &[Some(40)],
        transitions: &[],
        k: 0,
    },
    /* 63 - "WordCount" */
    LookaheadDFA {
        states: &[Some(96)],
        transitions: &[],
        k: 0,
    },
    /* 64 - "WordDrop" */
    LookaheadDFA {
        states: &[Some(91)],
        transitions: &[],
        k: 0,
    },
    /* 65 - "WordFiveAttribute" */
    LookaheadDFA {
        states: &[Some(93)],
        transitions: &[],
        k: 0,
    },
    /* 66 - "WordGen" */
    LookaheadDFA {
        states: &[Some(97)],
        transitions: &[],
        k: 0,
    },
    /* 67 - "WordLeft" */
    LookaheadDFA {
        states: &[Some(43)],
        transitions: &[],
        k: 0,
    },
    /* 68 - "WordLeftAndRight" */
    LookaheadDFA {
        states: &[Some(42)],
        transitions: &[],
        k: 0,
    },
    /* 69 - "WordLook" */
    LookaheadDFA {
        states: &[Some(45)],
        transitions: &[],
        k: 0,
    },
    /* 70 - "WordOther" */
    LookaheadDFA {
        states: &[Some(98)],
        transitions: &[],
        k: 0,
    },
    /* 71 - "WordRandom" */
    LookaheadDFA {
        states: &[Some(94)],
        transitions: &[],
        k: 0,
    },
    /* 72 - "WordReplace" */
    LookaheadDFA {
        states: &[Some(95)],
        transitions: &[],
        k: 0,
    },
    /* 73 - "WordRight" */
    LookaheadDFA {
        states: &[Some(44)],
        transitions: &[],
        k: 0,
    },
    /* 74 - "WordSide" */
    LookaheadDFA {
        states: &[Some(41)],
        transitions: &[],
        k: 0,
    },
    /* 75 - "WordVertical" */
    LookaheadDFA {
        states: &[Some(39)],
        transitions: &[],
        k: 0,
    },
];

pub const PRODUCTIONS: &[Production; 109] = &[
    // 0 - SkillLines: Line Period;
    Production {
        lhs: 55,
        production: &[ParseType::N(45), ParseType::N(41)],
    },
    // 1 - Line: ChangeDropStmtIncGenRandomDrop;
    Production {
        lhs: 41,
        production: &[ParseType::N(6)],
    },
    // 2 - Line: ChangeAllOfBoradStmt;
    Production {
        lhs: 41,
        production: &[ParseType::N(4)],
    },
    // 3 - Line: GenRandomDropStmt1;
    Production {
        lhs: 41,
        production: &[ParseType::N(35)],
    },
    // 4 - Line: GenShapeStmt;
    Production {
        lhs: 41,
        production: &[ParseType::N(38)],
    },
    // 5 - Line: DropRefreshStmt;
    Production {
        lhs: 41,
        production: &[ParseType::N(17)],
    },
    // 6 - ChangeDropStmtIncGenRandomDrop: Drops ChangeDropStmtIncGenRandomDropSuffix0;
    Production {
        lhs: 6,
        production: &[ParseType::N(9), ParseType::N(18)],
    },
    // 7 - ChangeDropStmtIncGenRandomDropSuffix0: Wo ChangeDropStmtIncGenRandomDropSuffix;
    Production {
        lhs: 9,
        production: &[ParseType::N(8), ParseType::N(58)],
    },
    // 8 - ChangeDropStmtIncGenRandomDropSuffix0: WordOther From Drops Wo Quantity WordGen;
    Production {
        lhs: 9,
        production: &[
            ParseType::N(66),
            ParseType::N(51),
            ParseType::N(58),
            ParseType::N(18),
            ParseType::N(26),
            ParseType::N(70),
        ],
    },
    // 9 - ChangeDropStmtIncGenRandomDropSuffix: Drop Ni ChangeDropStmtIncGenRandomDropList /* Vec */ WordChange;
    Production {
        lhs: 8,
        production: &[
            ParseType::N(61),
            ParseType::N(7),
            ParseType::N(43),
            ParseType::N(14),
        ],
    },
    // 10 - ChangeDropStmtIncGenRandomDropSuffix: Quantity WordGen;
    Production {
        lhs: 8,
        production: &[ParseType::N(66), ParseType::N(51)],
    },
    // 11 - ChangeDropStmtIncGenRandomDropList: Camma ChangeDropBlockOtherFirst ChangeDropStmtIncGenRandomDropList;
    Production {
        lhs: 7,
        production: &[ParseType::N(7), ParseType::N(5), ParseType::N(3)],
    },
    // 12 - ChangeDropStmtIncGenRandomDropList: ;
    Production {
        lhs: 7,
        production: &[],
    },
    // 13 - ChangeAllOfBoradStmt: AllDrops Wo Drops Ni WordChange;
    Production {
        lhs: 4,
        production: &[
            ParseType::N(61),
            ParseType::N(43),
            ParseType::N(18),
            ParseType::N(58),
            ParseType::N(0),
        ],
    },
    // 14 - DropRefreshStmt: RandomSuffix WordDrop Wo WordReplace;
    Production {
        lhs: 17,
        production: &[
            ParseType::N(72),
            ParseType::N(58),
            ParseType::N(64),
            ParseType::N(53),
        ],
    },
    // 15 - ChangeDropBlockOtherFirst: Drops Wo Drop Ni;
    Production {
        lhs: 5,
        production: &[
            ParseType::N(43),
            ParseType::N(14),
            ParseType::N(58),
            ParseType::N(18),
        ],
    },
    // 16 - GenRandomDropStmt1: RandomSuffix Drops Wo Quantity WordGen;
    Production {
        lhs: 35,
        production: &[
            ParseType::N(66),
            ParseType::N(51),
            ParseType::N(58),
            ParseType::N(18),
            ParseType::N(53),
        ],
    },
    // 17 - GenShapeStmt: GenShapeBlock GenShapeStmtList /* Vec */ WordChange;
    Production {
        lhs: 38,
        production: &[ParseType::N(61), ParseType::N(39), ParseType::N(36)],
    },
    // 18 - GenShapeStmtList: Camma GenShapeBlock GenShapeStmtList;
    Production {
        lhs: 39,
        production: &[ParseType::N(39), ParseType::N(36), ParseType::N(3)],
    },
    // 19 - GenShapeStmtList: ;
    Production {
        lhs: 39,
        production: &[],
    },
    // 20 - GenShapeBlock: GSStartPosition Wo Drop Ni;
    Production {
        lhs: 36,
        production: &[
            ParseType::N(43),
            ParseType::N(14),
            ParseType::N(58),
            ParseType::N(34),
        ],
    },
    // 21 - GSStartPosition: GSSPSide;
    Production {
        lhs: 34,
        production: &[ParseType::N(31)],
    },
    // 22 - GSStartPosition: GSSPCenter;
    Production {
        lhs: 34,
        production: &[ParseType::N(27)],
    },
    // 23 - GSSPSide: PositionLR GSSPSideWriteWidth GenShapeNumOfGen;
    Production {
        lhs: 31,
        production: &[ParseType::N(37), ParseType::N(32), ParseType::N(50)],
    },
    // 24 - GSSPCenter: GSSPCenterBlocks WordVertical GenShapeNumOfGen;
    Production {
        lhs: 27,
        production: &[ParseType::N(37), ParseType::N(75), ParseType::N(29)],
    },
    // 25 - GSSPCenterBlocks: GSSPCenterBlock GSSPCenterBlocksOpt /* Option */;
    Production {
        lhs: 29,
        production: &[ParseType::N(30), ParseType::N(28)],
    },
    // 26 - GSSPCenterBlocksOpt: And GSSPCenterBlock;
    Production {
        lhs: 30,
        production: &[ParseType::N(28), ParseType::N(1)],
    },
    // 27 - GSSPCenterBlocksOpt: ;
    Production {
        lhs: 30,
        production: &[],
    },
    // 28 - GSSPCenterBlock: PositionLOrR From PosInt WordCol WordLook;
    Production {
        lhs: 28,
        production: &[
            ParseType::N(69),
            ParseType::N(62),
            ParseType::N(48),
            ParseType::N(26),
            ParseType::N(49),
        ],
    },
    // 29 - PositionLR: WordLeft;
    Production {
        lhs: 50,
        production: &[ParseType::N(67)],
    },
    // 30 - PositionLR: WordRight;
    Production {
        lhs: 50,
        production: &[ParseType::N(73)],
    },
    // 31 - PositionLR: WordLeftAndRight;
    Production {
        lhs: 50,
        production: &[ParseType::N(68)],
    },
    // 32 - GSSPSideWriteWidth: WordSide GSSPSideWriteWidthOpt /* Option */;
    Production {
        lhs: 32,
        production: &[ParseType::N(33), ParseType::N(74)],
    },
    // 33 - GSSPSideWriteWidth: WordVertical;
    Production {
        lhs: 32,
        production: &[ParseType::N(75)],
    },
    // 34 - GSSPSideWriteWidthOpt: WordVertical;
    Production {
        lhs: 33,
        production: &[ParseType::N(75)],
    },
    // 35 - GSSPSideWriteWidthOpt: ;
    Production {
        lhs: 33,
        production: &[],
    },
    // 36 - PositionLOrR: WordLeft;
    Production {
        lhs: 49,
        production: &[ParseType::N(67)],
    },
    // 37 - PositionLOrR: WordRight;
    Production {
        lhs: 49,
        production: &[ParseType::N(73)],
    },
    // 38 - GenShapeNumOfGen: PosInt WordCol;
    Production {
        lhs: 37,
        production: &[ParseType::N(62), ParseType::N(48)],
    },
    // 39 - WordVertical: '縦';
    Production {
        lhs: 75,
        production: &[ParseType::T(5)],
    },
    // 40 - WordCol: '列';
    Production {
        lhs: 62,
        production: &[ParseType::T(6)],
    },
    // 41 - WordSide: '端';
    Production {
        lhs: 74,
        production: &[ParseType::T(7)],
    },
    // 42 - WordLeftAndRight: '両';
    Production {
        lhs: 68,
        production: &[ParseType::T(8)],
    },
    // 43 - WordLeft: '左';
    Production {
        lhs: 67,
        production: &[ParseType::T(9)],
    },
    // 44 - WordRight: '右';
    Production {
        lhs: 73,
        production: &[ParseType::T(10)],
    },
    // 45 - WordLook: '目';
    Production {
        lhs: 69,
        production: &[ParseType::T(11)],
    },
    // 46 - Drops: Drop DropsSuffix;
    Production {
        lhs: 18,
        production: &[ParseType::N(21), ParseType::N(14)],
    },
    // 47 - DropsSuffix: DropsList /* Vec */;
    Production {
        lhs: 21,
        production: &[ParseType::N(19)],
    },
    // 48 - Drops: FiveAttribute DropsList0 /* Vec */;
    Production {
        lhs: 18,
        production: &[ParseType::N(20), ParseType::N(24)],
    },
    // 49 - DropsSuffix: And Drop;
    Production {
        lhs: 21,
        production: &[ParseType::N(14), ParseType::N(1)],
    },
    // 50 - DropsList: ManyDrop DropsList;
    Production {
        lhs: 19,
        production: &[ParseType::N(19), ParseType::N(42)],
    },
    // 51 - DropsList: ;
    Production {
        lhs: 19,
        production: &[],
    },
    // 52 - DropsList0: Plus Drop DropsList0;
    Production {
        lhs: 20,
        production: &[ParseType::N(20), ParseType::N(14), ParseType::N(46)],
    },
    // 53 - DropsList0: ;
    Production {
        lhs: 20,
        production: &[],
    },
    // 54 - ManyDrop: Camma Drop;
    Production {
        lhs: 42,
        production: &[ParseType::N(14), ParseType::N(3)],
    },
    // 55 - ManyDrop: Plus Drop;
    Production {
        lhs: 42,
        production: &[ParseType::N(14), ParseType::N(46)],
    },
    // 56 - AllDrops: WordAll WordDrop;
    Production {
        lhs: 0,
        production: &[ParseType::N(64), ParseType::N(60)],
    },
    // 57 - FiveAttribute: WordFiveAttribute FiveAttributeOpt /* Option */;
    Production {
        lhs: 24,
        production: &[ParseType::N(25), ParseType::N(65)],
    },
    // 58 - FiveAttributeOpt: WordDrop;
    Production {
        lhs: 25,
        production: &[ParseType::N(64)],
    },
    // 59 - FiveAttributeOpt: ;
    Production {
        lhs: 25,
        production: &[],
    },
    // 60 - Quantity: PosInt WordCount QuantityOpt /* Option */;
    Production {
        lhs: 51,
        production: &[ParseType::N(52), ParseType::N(63), ParseType::N(48)],
    },
    // 61 - QuantityOpt: Each;
    Production {
        lhs: 52,
        production: &[ParseType::N(22)],
    },
    // 62 - QuantityOpt: ;
    Production {
        lhs: 52,
        production: &[],
    },
    // 63 - Drop: Color DropOpt /* Option */;
    Production {
        lhs: 14,
        production: &[ParseType::N(15), ParseType::N(10)],
    },
    // 64 - Drop: NonColoredDrop DropOpt0 /* Option */;
    Production {
        lhs: 14,
        production: &[ParseType::N(16), ParseType::N(44)],
    },
    // 65 - DropOpt0: WordDrop;
    Production {
        lhs: 16,
        production: &[ParseType::N(64)],
    },
    // 66 - DropOpt0: ;
    Production {
        lhs: 16,
        production: &[],
    },
    // 67 - DropOpt: WordDrop;
    Production {
        lhs: 15,
        production: &[ParseType::N(64)],
    },
    // 68 - DropOpt: ;
    Production {
        lhs: 15,
        production: &[],
    },
    // 69 - NonColoredDrop: Recovery;
    Production {
        lhs: 44,
        production: &[ParseType::N(54)],
    },
    // 70 - NonColoredDrop: Disturb;
    Production {
        lhs: 44,
        production: &[ParseType::N(13)],
    },
    // 71 - NonColoredDrop: Bomb;
    Production {
        lhs: 44,
        production: &[ParseType::N(2)],
    },
    // 72 - NonColoredDrop: Poison;
    Production {
        lhs: 44,
        production: &[ParseType::N(47)],
    },
    // 73 - NonColoredDrop: DeadlyPoison;
    Production {
        lhs: 44,
        production: &[ParseType::N(12)],
    },
    // 74 - Color: Fire;
    Production {
        lhs: 10,
        production: &[ParseType::N(23)],
    },
    // 75 - Color: Water;
    Production {
        lhs: 10,
        production: &[ParseType::N(57)],
    },
    // 76 - Color: Wood;
    Production {
        lhs: 10,
        production: &[ParseType::N(59)],
    },
    // 77 - Color: Lightning;
    Production {
        lhs: 10,
        production: &[ParseType::N(40)],
    },
    // 78 - Color: Dark;
    Production {
        lhs: 10,
        production: &[ParseType::N(11)],
    },
    // 79 - RandomSuffix: WordRandom So;
    Production {
        lhs: 53,
        production: &[ParseType::N(56), ParseType::N(71)],
    },
    // 80 - Fire: '火';
    Production {
        lhs: 23,
        production: &[ParseType::T(12)],
    },
    // 81 - Water: '水';
    Production {
        lhs: 57,
        production: &[ParseType::T(13)],
    },
    // 82 - Wood: '木';
    Production {
        lhs: 59,
        production: &[ParseType::T(14)],
    },
    // 83 - Lightning: '光';
    Production {
        lhs: 40,
        production: &[ParseType::T(15)],
    },
    // 84 - Dark: '闇';
    Production {
        lhs: 11,
        production: &[ParseType::T(16)],
    },
    // 85 - Recovery: '回復';
    Production {
        lhs: 54,
        production: &[ParseType::T(17)],
    },
    // 86 - Disturb: 'お邪魔';
    Production {
        lhs: 13,
        production: &[ParseType::T(18)],
    },
    // 87 - Bomb: '爆弾';
    Production {
        lhs: 2,
        production: &[ParseType::T(19)],
    },
    // 88 - DeadlyPoison: '猛毒';
    Production {
        lhs: 12,
        production: &[ParseType::T(20)],
    },
    // 89 - Poison: '毒';
    Production {
        lhs: 47,
        production: &[ParseType::T(21)],
    },
    // 90 - WordChange: '変化';
    Production {
        lhs: 61,
        production: &[ParseType::T(22)],
    },
    // 91 - WordDrop: 'ドロップ';
    Production {
        lhs: 64,
        production: &[ParseType::T(23)],
    },
    // 92 - WordAll: '全';
    Production {
        lhs: 60,
        production: &[ParseType::T(24)],
    },
    // 93 - WordFiveAttribute: '5属性';
    Production {
        lhs: 65,
        production: &[ParseType::T(25)],
    },
    // 94 - WordRandom: 'ランダム';
    Production {
        lhs: 71,
        production: &[ParseType::T(26)],
    },
    // 95 - WordReplace: '入れ替える';
    Production {
        lhs: 72,
        production: &[ParseType::T(27)],
    },
    // 96 - WordCount: '個';
    Production {
        lhs: 63,
        production: &[ParseType::T(28)],
    },
    // 97 - WordGen: '生成';
    Production {
        lhs: 66,
        production: &[ParseType::T(29)],
    },
    // 98 - WordOther: '以外';
    Production {
        lhs: 70,
        production: &[ParseType::T(30)],
    },
    // 99 - Wo: 'を';
    Production {
        lhs: 58,
        production: &[ParseType::T(31)],
    },
    // 100 - Ni: 'に';
    Production {
        lhs: 43,
        production: &[ParseType::T(32)],
    },
    // 101 - So: 'で';
    Production {
        lhs: 56,
        production: &[ParseType::T(33)],
    },
    // 102 - And: 'と';
    Production {
        lhs: 1,
        production: &[ParseType::T(34)],
    },
    // 103 - Each: 'ずつ';
    Production {
        lhs: 22,
        production: &[ParseType::T(35)],
    },
    // 104 - From: 'から';
    Production {
        lhs: 26,
        production: &[ParseType::T(36)],
    },
    // 105 - Plus: '+';
    Production {
        lhs: 46,
        production: &[ParseType::T(37)],
    },
    // 106 - Camma: '、';
    Production {
        lhs: 3,
        production: &[ParseType::T(38)],
    },
    // 107 - Period: '。';
    Production {
        lhs: 45,
        production: &[ParseType::T(39)],
    },
    // 108 - PosInt: "[1-9]([0-9])*";
    Production {
        lhs: 48,
        production: &[ParseType::T(40)],
    },
];

static TOKENIZERS: Lazy<Vec<(&'static str, Tokenizer)>> = Lazy::new(|| {
    vec![(
        "INITIAL",
        Tokenizer::build(TERMINALS, SCANNER_0.0, SCANNER_0.1).unwrap(),
    )]
});

pub fn parse<'t, T>(
    input: &'t str,
    file_name: T,
    user_actions: &mut SkillGrammar<'t>,
) -> Result<Tree<ParseTreeType<'t>>>
where
    T: AsRef<Path>,
{
    let mut llk_parser = LLKParser::new(
        55,
        LOOKAHEAD_AUTOMATA,
        PRODUCTIONS,
        TERMINAL_NAMES,
        NON_TERMINALS,
    );
    let token_stream =
        RefCell::new(TokenStream::new(input, file_name, &TOKENIZERS, MAX_K).unwrap());
    // Initialize wrapper
    let mut user_actions = SkillGrammarAuto::new(user_actions);
    let result = llk_parser.parse(token_stream, &mut user_actions);
    match result {
        Ok(()) => Ok(llk_parser.parse_tree),
        Err(e) => Err(e),
    }
}
